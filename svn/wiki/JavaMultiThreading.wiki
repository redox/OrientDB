#summary Multi-threading and Multi-database management
#labels API

= Introduction =

OrientDB supports multi-threads access to the database. {{{ODatabase*}}} instances are not thread-safe, so you've to get _an instance per thread_ and each database instance can be used _only in one thread per time_.

Multiple database instances points to the same storage by using the same URL. In this case Storage is thread-save and orchestrates requests from different {{{ODatabase*}}} instances.

{{{
ODatabaseDocument1------+
                        +----> OStorageLocal (url=local:/temp/db)
ODatabaseDocument2------+
}}}

Database instances share the following objects:
 * schema
 * index manager
 * security

These objects are synchronized for concurrent contexts by storing the current database in the [http://download.oracle.com/javase/6/docs/api/java/lang/ThreadLocal.html ThreadLocal] variable. Every time you create, open or acquire a database connection, the database instance is *automatically* set into the current [http://download.oracle.com/javase/6/docs/api/java/lang/ThreadLocal.html ThreadLocal] space, so in normal use this is hidden from the developer.

The current database is always reset for all common operations like load, save, etc.

Example of using two database in the same thread:
{{{
ODocument rec1 = database1.newInstance();
ODocument rec2 = database2.newInstance();

rec1.field("name", "Luca");
database1.save(rec1); // force saving in database1 no matter where the record came from

rec2.field("name", "Luke");
database2.save(rec2); // force saving in database2 no matter where the record came from
}}}

=Manual control=
Beware when you reuse database instances from different threads or then a thread handle multiple databases. In this case you can override the current database by calling this manually:

{{{
ODatabaseRecordThreadLocal.INSTANCE.set( database );
}}}

Where database is the current database instance. Example:

{{{
ODocument rec1 = database1.newInstance();
ODocument rec2 = database2.newInstance();

ODatabaseRecordThreadLocal.INSTANCE.set( database1 );
rec1.field("name", "Luca");
rec1.save();

ODatabaseRecordThreadLocal.INSTANCE.set( database2 );
rec2.field("name", "Luke");
rec2.save();
}}}