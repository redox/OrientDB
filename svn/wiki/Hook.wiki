#summary Hook Java API
#labels java

= Introduction =

Starting from v. 0.9.16 OrientDB supports *hooks*. Hook works like a trigger. Hook lets to the user application to intercept internal events.

A hook is an implementation of the interface [http://code.google.com/p/orient/source/browse/trunk/core/src/main/java/com/orientechnologies/orient/core/hook/ORecordHook.java ORecordHook]:

{{{
public interface ORecordHook {
  public enum TYPE {
    ANY,
    BEFORE_CREATE, BEFORE_READ, BEFORE_UPDATE, BEFORE_DELETE,
    AFTER_CREATE, AFTER_READ, AFTER_UPDATE, AFTER_DELETE
  };

  public void onTrigger(TYPE iType, ORecord<?> iRecord);
}
}}}

OrientDB comes with an abstract implementation of the [http://code.google.com/p/orient/source/browse/trunk/core/src/main/java/com/orientechnologies/orient/core/hook/ORecordHook.java ORecordHook] interface called [http://code.google.com/p/orient/source/browse/trunk/core/src/main/java/com/orientechnologies/orient/core/hook/ORecordHookAbstract.java ORecordHookAbstract.java]. It switches the callback event calling seperate methods for each one:

{{{
public abstract class ORecordHookAbstract implements ORecordHook {
  public void onRecordBeforeCreate(ORecord<?> iRecord){}
  public void onRecordAfterCreate(ORecord<?> iRecord){}
  public void onRecordBeforeRead(ORecord<?> iRecord){}
  public void onRecordAfterRead(ORecord<?> iRecord){}
  public void onRecordBeforeUpdate(ORecord<?> iRecord){}
  public void onRecordAfterUpdate(ORecord<?> iRecord){}
  public void onRecordBeforeDelete(ORecord<?> iRecord){}
  public void onRecordAfterDelete(ORecord<?> iRecord){}
  ...
}}}

In this example the events "_before-create_" and "_after-create_" are called when the last line is executed.

{{{
public class HookTest extends ORecordHookAbstract {
  public saveProfile(){
    ODatabaseObjectTx database = new ODatabaseObjectTx("remote:localhost/demo");
    database.open("writer", "writer");

    // REGISTER MYSELF AS HOOK
    database.registerHook(this);

    ...
    p = new Profile("HookTest");
    database.save(p);
    ...
  }

  @Override
  public void onRecordAfterCreate(ORecord<?> iRecord){
    System.out.println("Record created successfully");
  }
}  
}}}


For more information take a look to the [http://code.google.com/p/orient/source/browse/trunk/tests/src/test/java/com/orientechnologies/orient/test/database/auto/HookTest.java HookTest.java] source code.