#summary Import database from RDBMS

OrientDB supports a subset of SQL, so importing a database created as "Relational" is straightforward.

For the sake of simplicity consider your Relational database having just these two tables:
 * POST
 * COMMENT

Where the relationship is between Post and comment as One-2-Many.

{{{
TABLE POST:
+----+----------------+
| id | title          |
+----+----------------+
| 10 | NoSQL movement |
| 20 | New OrientDB   |
+----+----------------+

TABLE COMMENT:
+----+--------+--------------+
| id | postId | text         |
+----+--------+--------------+
|  0 |   10   | First        |
|  1 |   10   | Second       |
| 21 |   10   | Another      |
| 41 |   20   | First again  |
| 82 |   20   | Second Again |
+----+--------+--------------+
}}}


Follow these steps:

== Export your Relational Database ==
Most of Relational DBMSs provide a way to export a database in SQL format. What you need is a text file containing the SQL INSERT commands to recreate the database from scratch. Take a look to the documentation of your RDBMS provider.

== Create the class, one for tables ==
You can follow 2 strategies to create the equivalent database in OrientDB. To create and edit the schema use the [OrientDB_Studio OrientDB Studio visual tool] or the [ConsoleCommands Console].
=== Classic Relational Database ===
Since the Relational Model hasn't Object Oriented concepts you can create a class per table.

{{{
> CREATE CLASS POST
> CREATE CLASS COMMENT
}}}

=== Pseudo Object Oriented database ==
This is the case when your Relational database was created using a OR-Mapping tool like [http://www.hibernate.org Hibernate] or [http://www.datanucleus.org Data Nucleus] (JDO).

In this case you have to re-build the original Object Oriented structure directly in OrientDB using the Object Oriented capabilities of OrientDB.

== Import the records ==
Modify the exported script generated by the RDBMS leaving only the INSERT statements:
{{{
INSERT INTO POST (id, title) VALUES( 10, 'NoSQL movement' );
INSERT INTO POST (id, title) VALUES( 20, 'New OrientDB' );

INSERT INTO COMMENT (id, postId, text) VALUES( 0, 10, 'First' );
INSERT INTO COMMENT (id, postId, text) VALUES( 1, 10, 'Second' );
INSERT INTO COMMENT (id, postId, text) VALUES( 21, 10, 'Another' );
INSERT INTO COMMENT (id, postId, text) VALUES( 41, 20, 'First again' );
INSERT INTO COMMENT (id, postId, text) VALUES( 82, 20, 'Second Again' );
}}}

Execute it by using the console giving the text file just created as first argument, in this case "database.sql":
{{{
> console.sh database.sql
}}}

== Create links ==
At this point you need to create links as relationships in OrientDB. The  [SQLCreateLink Create Link command] creates links between two or more records of type Document. In facts in the Relational world relationships are resolved as foreign keys.

Using OrientDB, instead, you have direct relationship as in your object model. So the navigation is from _Post_ to _Comment_ and not viceversa as for Relational model. For this reason you need to create a link as *INVERSE*.

Execute:
{{{
CREATE LINK comments TYPE linkset FROM comment.postId To post.id INVERSE
}}}

== Remove old constraints ==
Now you've direct links the field 'postId' has no more sense, so remove it:
{{{
UPDATE comment REMOVE postId
}}}

== Enjoy ==

That's all. Now you've a OrientDB database where relationships are direct without JOINS.

Now enjoy with your new document-graph database and the following queries:

Select all the post with comments:
{{{
select * from post where comments.size() > 0
}}}

Select all the posts where comments contain the word 'flame' in the text property (before as column):
{{{
select * from post where comments contains ( text like '%flame%' )
}}}


Select all the posts commented today. In this case we're assuming a property "date" is present in Comment class:
{{{
select * from post where comments contains ( date > '2011-04-14 00:00:00' )
}}}


To know more about other SQL commands look at [SQL SQL commands].

This is a command of the Orient console. To know all the commands go to [ConsoleCommands Console commands].